@model FileHandlerModel
@{
    ViewData["Title"] = "FilePond";
}

@section Styles
{
    <link rel="stylesheet" href="~/lib/filepond/filepond.min.css"/>
    <link rel="stylesheet" href="~/lib/filepond/plugins/image-preview/filepond-plugin-image-preview.min.css"/>
}

    <div class="container">
        <div class="row">
            <div class="col-md-6 mx-auto">
                <form method="post" asp-controller="home" asp-action="store" asp-antiforgery="true">
                    <div class="card">
                        <div class="card-header">
                            <h4 class="text-center text-primary">FilePond Plugin</h4>
                        </div>
                        <div class="card-body">
                            <input type="file" class="filepond" id="filepond" asp-for="Files" multiple />
                        </div>
                    </div>

                    <button type="submit">Save</button>
                </form>
            </div>
        </div>
    </div>

    @section Scripts
    {
    <script src="~/lib/filepond/filepond.min.js"></script>
    <script src="~/lib/filepond/plugins/image-preview/filepond-plugin-image-preview.min.js"></script>
    <script src="~/lib/filepond/plugins/file-size-validate/filepond-plugin-file-validate-size.min.js"></script>
    <script src="~/lib/filepond/plugins/file-type-validate/filepond-plugin-file-validate-type.min.js"></script>
    <script>
        FilePond.registerPlugin(FilePondPluginImagePreview);
        FilePond.registerPlugin(FilePondPluginFileValidateSize);
        FilePond.registerPlugin(FilePondPluginFileValidateType);

        const inputElement = document.querySelector('input[id="filepond"]');
        let ApiUrl = "/api/filepond/"
        const pond = FilePond.create(inputElement, {
            maxFiles: 5,
            allowFileSizeValidation: true,
            allowFileTypeValidation: true,
            maxFileSize: "1MB",
            server: {
                url: ApiUrl,
            }
        });

        FilePond.setOptions({
            server: {
                url: "/api/filepond/",
                process: (fieldName, file, metadata, load, error, progress, abort) => {
                    console.log(fieldName);
                    console.log(file);
                    console.log(metadata);
                    const formData = new FormData();
                    formData.append(fieldName, file, file.name);

                    const request = new XMLHttpRequest();
                    request.open('POST', ApiUrl);
                    // Setting computable to false switches the loading indicator to infinite mode
                    request.upload.onprogress = (e) => {
                        progress(e.lengthComputable, e.loaded, e.total);
                    };

                    request.onload = function() {
                        if (request.status >= 200 && request.status < 300) {
                            load(request.responseText);
                        }
                        else {
                            error('Error during Upload!');
                        }
                    };

                    request.send(formData);
                    //expose an abort method so the request can be cancelled
                    return {
                        abort: () => {
                            // This function is entered if the user has tapped the cancel button
                            request.abort();
                            // Let FilePond know the request has been cancelled
                            abort();
                        }
                    };
                }
            }
        });
    </script>
}


